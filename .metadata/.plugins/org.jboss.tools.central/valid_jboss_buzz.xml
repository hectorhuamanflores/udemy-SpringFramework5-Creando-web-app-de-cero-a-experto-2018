<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Reducing data inconsistencies with Red Hat Process Automation Manager</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ezE6-v3_6Os/" /><category term="BPM" scheme="searchisko:content:tags" /><category term="data" scheme="searchisko:content:tags" /><category term="data reconciliation" scheme="searchisko:content:tags" /><category term="digital process automation" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jboss bpm suite" scheme="searchisko:content:tags" /><category term="process" scheme="searchisko:content:tags" /><category term="process automation" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Donato Donato</name></author><id>searchisko:content:id:jbossorg_blog-reducing_data_inconsistencies_with_red_hat_process_automation_manager</id><updated>2018-08-22T16:08:39Z</updated><published>2018-08-22T16:08:39Z</published><content type="html">&lt;p&gt;Managing data reconciliation through a specific process is a common necessity for projects that require Digital Process Automation (formerly known as Business Process Management), and &lt;a href="https://developers.redhat.com/products/rhpam/overview/"&gt;Red Hat Process Automation Manager&lt;/a&gt; helps to address such a requirement. This article provides good practices and a technique for satisfying data reconciliation in a structured and clean way.&lt;/p&gt; &lt;p&gt;Red Hat Process Automation Manager was formerly known as Red Hat JBoss BPM Suite, so it&amp;#8217;s worth mentioning that &lt;a href="http://jbpm.org/"&gt;jBPM&lt;/a&gt; is the upstream project that fuels Process Automation Manager. The blog post &lt;a href="https://middlewareblog.redhat.com/2018/07/18/from-bpm-and-business-automation-to-digital-automation-platforms/"&gt;From BPM and business automation to digital automation platforms&lt;/a&gt; explains the reasons behind the new name and shares exciting news for this major release.&lt;span id="more-514787"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Data reconciliation&lt;/h2&gt; &lt;p&gt;During a process&amp;#8217;s life, data is collected from systems and humans, mixed and enriched, and then transferred to other systems. Along the way, a system might not be aligned with other systems and a specific call might end up in an exception state that has to be handled in order to successfully complete the process instance.&lt;/p&gt; &lt;p&gt;There are many reasons for data inconsistencies. Among others, the most common are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;User input is inaccurate&lt;/li&gt; &lt;li&gt;The source of the information is out of date or erroneous&lt;/li&gt; &lt;li&gt;The destination of the information is outdated or erroneous&lt;/li&gt; &lt;li&gt;The destination system already contains the inserted data&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Sometimes, it&amp;#8217;s sufficient to manage the exception automatically and unwind the process with a set of actions to preserve the data integrity. In other cases, the user must decide how to solve the inconsistency. This approach is known as &lt;em&gt;data reconciliation&lt;/em&gt;—when the system catches an exception, it creates a new user task, and the user has three options: retry, change the data and retry, or re-throw the exception.&lt;/p&gt; &lt;p&gt;This is the basic requirement, but sometimes an organization requires a sophisticated process to handle the exception. For example, the organization might want to manage a &amp;#8220;triage&amp;#8221; process which requires that when the first error detection occurs, the error is routed to the specific information stakeholder who can decide which resolution strategy is correct. For example, the user might understand that the failing system needs an update before retrying to insert the data again. Conversely, the information stakeholder might know that the error comes from another system or by a human mistake, so he can change the data (the&lt;i&gt; request payload&lt;/i&gt;) in order to successfully complete the process.&lt;/p&gt; &lt;p&gt;With the last option, the user thinks that the process is unrecoverable, so the best action is to re-throw the exception to the process engine. In this case, it&amp;#8217;s important that the process is designed to handle the exception and gracefully unwind the process instance by calling the compensation logic and leaving a clean situation.&lt;/p&gt; &lt;h2&gt;Exception handling with decorum&lt;/h2&gt; &lt;p&gt;The usual approach is to wrap the external system interaction with a sub-process that manages the exceptional situation. In this way, whenever the &amp;#8220;business process&amp;#8221; has to deal with an external system where data reconciliation is expected, the designer has to call the sub-process that engages the user for the resolution.&lt;/p&gt; &lt;p&gt;Even if this approach works, it has the big disadvantage of creating a new process instance for each system interaction that requires reconciliation in case of errors. For example, when a process is completed that contains three calls to systems that require such extra care, the process administrator will see four process instances. Even if the sub-process life is really short, it represents an overhead and leaves the process history cluttered.&lt;/p&gt; &lt;p&gt;With &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/process-automation-manager"&gt;Red Hat Process Automation Manager&lt;/a&gt;, it&amp;#8217;s possible to address this problem with a really elegant solution: the Exception Handling Decorators.&lt;/p&gt; &lt;p&gt;In general, the &lt;a href="https://en.wikipedia.org/wiki/Decorator_pattern"&gt;decorator pattern&lt;/a&gt; is a way to add a new behavior to an existing class. It&amp;#8217;s similar to inheritance but has the benefit that it can be added at runtime. In this specific use case, it&amp;#8217;s used to manage the work item exception. Since any remote call to an external system is managed by a Work Item Handler, we can leverage the decorator to catch the exception and create on the fly a process to manage it when needed.&lt;/p&gt; &lt;p&gt;The idea is quite simple and the flexibility of the runtime enables it. In the following repository, you will find an implementation that works pretty well, but you are free to extend and improve it: &lt;a href="https://github.com/dmarrazzo/proc-decorator"&gt;decorator project&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;The decorator in action&lt;/h2&gt; &lt;p&gt;To understand how the decorator works in practice, you have to compile and install it in a Maven repository that is reachable by the &lt;i&gt;Process Server&lt;/i&gt; (sometimes known as the &lt;i&gt;Kie server&lt;/i&gt;). If you have a standalone installation in your local machine, it&amp;#8217;s enough to issue the following command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;mvn install&lt;/code&gt;&lt;/p&gt; &lt;p&gt;In the following repository, you will find a sample Process Automation Manager project that leverages the decorator to implement the data reconciliation strategy: &lt;a href="https://github.com/dmarrazzo/proc-decorator-usage"&gt;decorator usage project&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Clone it in your Business Central repository to inspect the content and deploy it.&lt;/p&gt; &lt;p&gt;The project &lt;code&gt;proc-decorator-usage&lt;/code&gt; defines the decorator as a dependency in its own &lt;code&gt;pom.xml&lt;/code&gt; file, and then the configuration relies on the &lt;code&gt;work-item-handlers&lt;/code&gt; section of the &lt;code&gt;kie-deployment-descriptor.xml&lt;/code&gt; file. For the sake of simplicity, in this sample, the decorator replaces the standard REST Work Item Handler, but if you want to restrict the influence of the decorator to a subset of REST calls, you can create another Work Item Handler definition (for example, ReconciledRest).&lt;/p&gt; &lt;p&gt;The following screenshot shows the Business Central view where the decorator is defined:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-514807 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_001-1024x461.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_001-300x135.png" alt="" width="300" height="135" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_001-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_001-768x346.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_001-1024x461.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_001.png 1507w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;p&gt;In the Work Item Handler definition, there is the &lt;b&gt;name&lt;/b&gt; that uniquely identifies the reusable service task and the &lt;b&gt;constructor initialization&lt;/b&gt; (using an MVEL expression): &lt;code&gt;new example.ProcessTaskHandlerDecorator( org.jbpm.process.workitem.rest.RESTWorkItemHandler.class, runtimeManager)&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The first parameter is the class of the Work Item Handler that the decorator will surround. In this example, there is the REST Work Item Handler, but the same decorator can be used for any kind of Work Item Handler: the Web Services one or a custom one. The second parameter is the instance of Runtime Manager used internally by the decorator.&lt;/p&gt; &lt;p&gt;The decorator has other constructors:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ProcessTaskHandlerDecorator( Class&amp;#60;? extends WorkItemHandler&amp;#62; originalTaskHandlerClass, RuntimeManager runtimeManager, String processId )&lt;/code&gt;. This constructor requires an extra parameter: the process ID of the reconciliation process (for example, &lt;code&gt;src.exception-handling&lt;/code&gt;). With this constructor, the reconciliation process is defined once instead of passing it in every task, but the side effect is that the reconciliation process is the same for all tasks.&lt;/li&gt; &lt;li&gt;&lt;code&gt;ProcessTaskHandlerDecorator( RuntimeManager runtimeManager )&lt;/code&gt; This construct omits the &lt;code&gt;originalTaskHandlerClass&lt;/code&gt; and uses the REST one by default.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code&gt;main-proc&lt;/code&gt; is a fictitious process with two service calls: Other System and Failing System. The latter is the REST call that is configured to fail and will trigger the decorator logic to manage the reconciliation logic. This chain of calls is wrapped with exception handling logic. If the exception reaches this level, it means that the reconciliation process was not able to repair the failure and the only option is to give up that instance and abort everything. Technically, it&amp;#8217;s a managed throwing back of the original exception to the main process. It&amp;#8217;s a good practice to design the process to manage the unexpected such that the process is gracefully unwound: the goal is to leave a clean situation. This is often managed with compensation logic such as this: cancel the reservation, invalidate a record, and send an email to warn that the process failed. Here is a diagram of &lt;code&gt;main-proc&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-514817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_002.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_002-300x147.png" alt="main process" width="300" height="147" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_002-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_002-768x376.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_002.png 934w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;p&gt;Failing System is a standard REST call with all the parameters that the REST Work Item Handler expects except that the &lt;code&gt;processId&lt;/code&gt; parameter is used by the decorator to identify the process to start when a reconciliation is required. The request is designed to fail, because the URL is &lt;code&gt;http://localhost&lt;/code&gt;. So unless the host has an HTTP server listening on port 80, it will raise an exception and the decorator will show its behavior.&lt;/p&gt; &lt;p&gt;&lt;code&gt;exception-handling&lt;/code&gt; is the process in charge of the reconciliation. The decorator will trigger it when an exception is raised by the Failing System, which is always in our test case, but in real cases, the main process completes its normal life without engaging the reconciliation process. The following is a diagram of the sample reconciliation process.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-514827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_003.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_003-300x127.png" alt="sample reconciliation process" width="300" height="127" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_003-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_003.png 516w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;exception-handling&lt;/code&gt; is the simplest possible process for managing the reconciliation: one human task and a gateway to the &lt;i&gt;normal end&lt;/i&gt; or to the &lt;i&gt;error end&lt;/i&gt;. The &lt;b&gt;human task&lt;/b&gt; form contains the following fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Url&lt;/b&gt; to change the endpoint of the REST Request. In the test case context, it is useful to switch the request on a working endpoint and simulate a successful retry.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Information&lt;/b&gt; to change the request payload and ask for a retry.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Exception&lt;/b&gt; flagging. This is when the user closes the reconciliation process with a failure. It means that it&amp;#8217;s not possible to find a solution and the original error is sent back to the originator process (&lt;code&gt;main-proc&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;&lt;b&gt;Retry&lt;/b&gt; if the previous field is false. This controls the retry behavior. If this field is true, the call to the external system is issued again using the parameters changed above in the form. If this field is false, the Failing System task is flagged as done and the main process can continue its life. From a reconciliation point of view, this means that the user has fixed the problem with other tools (outside of Process Automation Manager).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The decorator transfers all the input parameters of the task to the &lt;code&gt;exception-handling&lt;/code&gt; process, so the user can inspect and change the input parameters that caused the exception. In fact, when the exception handling process is completed successfully and a retry is requested, the decorator executes again the original task logic with the updated parameters (the REST call, in this case). By the way, if the second execution fails, a new reconciliation process is instantiated and so forth.&lt;/p&gt; &lt;p&gt;The following steps show the runtime behavior:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Build and deploy the &lt;code&gt;proc-decorator-usage&lt;/code&gt; project.&lt;/li&gt; &lt;li&gt;Launch &lt;code&gt;main-proc&lt;/code&gt; in the Process Definition view. Fill in the process form with any data and click&lt;b&gt; submit&lt;/b&gt;.&lt;/li&gt; &lt;li&gt;The process instance page is opened. Click&lt;b&gt; Diagram&lt;/b&gt;; there you can notice that the Failing System is highlighted. The fact that a process is waiting on a REST task denotes that the decorator is working. The default REST task behavior is synchronous. The external request is issued and the result must come back within the timeout limits; otherwise, an exception is raised and the process handles the exception immediately. In the case of error, the decorator changes the normal REST task behavior to asynchronous behavior; the process execution is suspended and waits for the completion of the reconciliation process. The following is a diagram of the main process waiting for reconciliation. &lt;img class=" alignnone size-medium wp-image-514837 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_004.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_004-300x149.png" alt="main process waiting reconciliation" width="300" height="149" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_004-300x149.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_004-768x380.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_004.png 929w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/li&gt; &lt;li&gt;Switch to the Process Instances view. You should find two active process instances: &lt;code&gt;main-proc&lt;/code&gt; and &lt;code&gt;exception-handling&lt;/code&gt;. The latter was instantiated by the decorator. This screenshot shows the process instances list. &lt;img class=" alignnone size-medium wp-image-514847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_005.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_005-300x121.png" alt="process instances list" width="300" height="121" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_005-300x121.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_005-768x309.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/data-reconciliation_005.png 1017w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/li&gt; &lt;li&gt;Switch to the Tasks view. The exception task is created for the person in charge of the reconciliation. In this sample, all users can work on this task but in real cases, it should be routed to the people responsible for the Failing System. It&amp;#8217;s possible to extend this sample by adding an input parameter to the failing task to identify the users in charge of the reconciliation for that task; then, that parameter can be used to dynamically assign the potential owners of the human task.&lt;/li&gt; &lt;li&gt;Open, claim, and start the task. You can test three possible routes: &lt;ul&gt; &lt;li&gt;&lt;b&gt;don&amp;#8217;t retry:&lt;/b&gt; Just complete the task. This will close successfully the reconciliation process and flag as completed the Failing System task. Then even the &lt;code&gt;main-proc&lt;/code&gt; will complete.&lt;/li&gt; &lt;li&gt;&lt;b&gt;retry:&lt;/b&gt; Flag retry, change the information fields and provide a URL to match an existing HTTP POST endpoint. Eventually, use &lt;a href="https://www.soapui.org/"&gt;SoapUI&lt;/a&gt; or another similar tool to mock up a REST service and check the modified payload. If the REST call will succeed (get back an HTTP 200-level response), the processes will even be completed successfully. Otherwise, the first &lt;code&gt;exception-handling&lt;/code&gt; process will be completed and a new one is started while &lt;code&gt;main-proc&lt;/code&gt; still waits.&lt;/li&gt; &lt;li&gt;&lt;b&gt;re-throw exception:&lt;/b&gt; Finally, flag the exception field to simulate the reconciliation failure. The decorator will throw the original exception to &lt;code&gt;main-proc&lt;/code&gt;. Check in the log for the graceful unwind script execution. The &lt;code&gt;main-proc&lt;/code&gt; process will complete, whereas the &lt;code&gt;exception-handling&lt;/code&gt; process is aborted, because it reaches the &lt;i&gt;error end&lt;/i&gt; node.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;There&amp;#8217;s a final consideration: in this sample, the exception form is bound to a specific data object (Information). It&amp;#8217;s possible to create a user interface for the reconciliation task that is able to render a generic object and, in such a way, to have one reconciliation process to handle different payloads.&lt;/p&gt; &lt;h2&gt;Analyzing the decorator implementation&lt;/h2&gt; &lt;p&gt;This section provides a brief description of the decorator implementation. The &lt;a href="https://gitlab.consulting.redhat.com/dmarrazz/decorator"&gt;source code&lt;/a&gt; contains some interesting examples of Process Automation Manager API usage.&lt;/p&gt; &lt;h3&gt;ProcessTaskHandlerDecorator&lt;/h3&gt; &lt;p&gt;It extends the &lt;code&gt;org.jbpm.bpmn2.handler.AbstractExceptionHandlingTaskHandler&lt;/code&gt; class that is provided by the Process Automation Manager libraries and implements the decorator pattern for &lt;i&gt;Work Item Handlers&lt;/i&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;handleExecuteException&lt;/code&gt;. This method is called when an exception happens in the decorated Work Item Handler while running the &lt;code&gt;executeWorkItem&lt;/code&gt; method. It starts the reconciliation process and attaches a completion listener implemented by the &lt;code&gt;ErrorHandlingCompletion&lt;/code&gt; class. All input parameters of the decorated Work Item Handler are transferred to the reconciliation process.&lt;/li&gt; &lt;li&gt;&lt;code&gt;handleAbortException&lt;/code&gt;. This method is called when an exception happens in the decorated Work Item Handler while running the &lt;code&gt;abortWorkItem&lt;/code&gt; method. The decorator just logs the situation.&lt;/li&gt; &lt;li&gt;&lt;code&gt;rethrowException&lt;/code&gt;. This method re-throws the original exception to the process containing the failing Work Item Handler. It&amp;#8217;s called by the &lt;code&gt;ErrorHandlingCompletion&lt;/code&gt; class.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;ProcessCompletionListener&lt;/h3&gt; &lt;p&gt;This is an abstract class that listens to a specific process instance completion. The sub-class has to implement two methods: &lt;code&gt;processCompleted&lt;/code&gt;, which is called upon successful completion, and &lt;code&gt;processAborted&lt;/code&gt;, which is called when the process reaches an &lt;em&gt;error end&lt;/em&gt; node. This abstract class is designed to be reusable even in other contexts.&lt;/p&gt; &lt;h3&gt;ErrorHandlingCompletion&lt;/h3&gt; &lt;p&gt;It extends the previous abstract class and handles the reconciliation process completion.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;processCompleted&lt;/code&gt; is executed when the reconciliation process completes normally. If the retry variable is true, the process variables override the original input parameters of the decorated Work Item Handler and it is executed again. Otherwise, the decorated Work Item Handler is closed as aborted (&lt;code&gt;abortWorkItem&lt;/code&gt;). It&amp;#8217;s arguable if a not-executed task should be considered aborted or completed, but in both cases, the containing process continues its normal execution.&lt;/li&gt; &lt;li&gt;&lt;code&gt;processAborted&lt;/code&gt; is executed when the reconciliation process completes with an &lt;i&gt;error end&lt;/i&gt; node. The original error is thrown back to the main process.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/process-automation-manager"&gt;Red Hat Process Automation Manager&lt;/a&gt; is a powerful technology for reducing data inconsistencies across different systems, which is one of the key benefits provided by a Digital Process Automation initiative. This article proposes a general approach and a reusable asset that streamlines process design.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;linkname=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F22%2Freducing-data-inconsistencies-with-red-hat-process-automation-manager%2F&amp;#38;title=Reducing%20data%20inconsistencies%20with%20Red%20Hat%20Process%20Automation%20Manager" data-a2a-url="https://developers.redhat.com/blog/2018/08/22/reducing-data-inconsistencies-with-red-hat-process-automation-manager/" data-a2a-title="Reducing data inconsistencies with Red Hat Process Automation Manager"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/22/reducing-data-inconsistencies-with-red-hat-process-automation-manager/"&gt;Reducing data inconsistencies with Red Hat Process Automation Manager&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ezE6-v3_6Os" height="1" width="1" alt=""/&gt;</content><summary>Managing data reconciliation through a specific process is a common necessity for projects that require Digital Process Automation (formerly known as Business Process Management), and Red Hat Process Automation Manager helps to address such a requirement. This article provides good practices and a technique for satisfying data reconciliation in a structured and clean way. Red Hat Process Automatio...</summary><dc:creator>Donato Donato</dc:creator><dc:date>2018-08-22T16:08:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/22/reducing-data-inconsistencies-with-red-hat-process-automation-manager/</feedburner:origLink></entry><entry><title>Unit testing constraints with business input from Excel or LibreOffice</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vGKzDrM4BZk/UnitTestingConstraintsWithBusinessInputFromExcelOrLibreOffice.html" /><category term="feed_group_name_optaplanner" scheme="searchisko:content:tags" /><category term="feed_name_optaplanner" scheme="searchisko:content:tags" /><category term="useCase" scheme="searchisko:content:tags" /><author><name>MusaTalluzi</name></author><id>searchisko:content:id:jbossorg_blog-unit_testing_constraints_with_business_input_from_excel_or_libreoffice</id><updated>2018-08-22T07:18:49Z</updated><published>2018-08-21T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The business experts explain the business constraints to us, the developers. But how can we be sure that we understood them correctly? Or worse, how can we test that they agree among themselves once the constraints are formalized?&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Well, there’s one great way to do that: JUnit tests populated by &lt;code&gt;*.xlsx&lt;/code&gt; data. We allow them to recreate a small subset of the solution in Excel/LibreOffice and let them decide how many constraints match. Then our JUnit tests check if our constraint implementations adhere to those requirements.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_traditional_unit_tests"&gt;Traditional unit tests&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;a href="https://www.optaplanner.org/learn/useCases/conferenceScheduling.html"&gt;Conference Scheduling example&lt;/a&gt;, to test room conflict constraint (hard penalty per pair of talks in the same room in overlapping timeslots) write:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Test public void roomConflict() { TalkType talkType = new TalkType(0L, "type1"); Talk talk1 = new Talk(1L) .withTalkType(talkType) .withSpeakerList(Collections.emptyList()) .withRequiredRoomTagSet(Collections.emptySet()) ... Talk talk2 = new Talk(2L) ... LocalDateTime start1 = LocalDateTime.of(2018, 1, 1, 9, 0); LocalDateTime end1 = LocalDateTime.of(2018, 1, 1, 10, 0); LocalDateTime start2 = LocalDateTime.of(2018, 1, 1, 9, 30); LocalDateTime end2 = LocalDateTime.of(2018, 1, 1, 10, 30); LocalDateTime start3 = LocalDateTime.of(2018, 1, 1, 10, 0); LocalDateTime end3 = LocalDateTime.of(2018, 1, 1, 11, 0); Timeslot slot1 = new Timeslot(1L) .withTalkTypeSet(Collections.singleton(talkType)) .withStartDateTime(start1) .withEndDateTime(end1); Timeslot slot2 = new Timeslot(2L) ... Timeslot slot3 = new Timeslot(3L) ... Room room1 = new Room(1L) .withTalkTypeSet(Collections.singleton(talkType)) .withUnavailableTimeslotSet(Collections.emptySet()); ConferenceSolution solution = new ConferenceSolution(1L) .withTalkTypeList(Collections.singletonList(talkType)) ... scoreVerifier.assertHardWeight(ROOM_CONFLICT, 0, solution); // Talks in same room without overlapping time slots talk1.withRoom(room1).withTimeslot(slot1); talk2.withRoom(room1).withTimeslot(slot3); scoreVerifier.assertHardWeight(ROOM_CONFLICT, 0, solution); // Talks in same room with overlapping time slots talk2.withTimeslot(slot2); scoreVerifier.assertHardWeight(ROOM_CONFLICT, -10, solution); }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In order to test room conflict, you need to initialize two talks, three timeslots and one room. However, the previous snippet of code is too long for such a simple unit test, most of the boilerplate code is for initializing required fields for the conference solution that you do not need for the unit test, and you must do that for every single unit test. For more complex constraints, it gets too cumbersome to write traditional unit tests and reason about them.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_unit_tests_in_code_xlsx_code_files"&gt;Unit tests in &lt;code&gt;xlsx&lt;/code&gt; files&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In order to avoid initializing unwanted fields, you can take advantage of &lt;a href="https://github.com/kiegroup/optaplanner/blob/master/optaplanner-examples/src/main/java/org/optaplanner/examples/conferencescheduling/persistence/ConferenceSchedulingXlsxFileIO.java"&gt;ConferenceSchedulingXlsxFileIO&lt;/a&gt; to initialize them for you, and only write what you use in that test or in other tests in the same spreadsheet.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To test room conflict using an &lt;code&gt;xlsx&lt;/code&gt; file, create three timeslots, two talks and one room:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="xlsxUnitTestingTimeslots.png"&gt;&lt;img src="xlsxUnitTestingTimeslots.png" alt="xlsxUnitTestingTimeslots" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="xlsxUnitTestingTalks.png"&gt;&lt;img src="xlsxUnitTestingTalks.png" alt="xlsxUnitTestingTalks" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="xlsxUnitTestingRooms.png"&gt;&lt;img src="xlsxUnitTestingRooms.png" alt="xlsxUnitTestingRooms" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;After you initialize the required fields, create a separate sheet for every score verification of each constraint. For example, these 2 sheets check the room conflict constraint:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="xlsxUnitTestingRoomConflict1.png"&gt;&lt;img src="xlsxUnitTestingRoomConflict1.png" alt="xlsxUnitTestingRoomConflict1" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;a class="image" href="xlsxUnitTestingRoomConflict2.png"&gt;&lt;img src="xlsxUnitTestingRoomConflict2.png" alt="xlsxUnitTestingRoomConflict2" /&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In every test sheet (blue color), specify the constraint package, constraint name, description of current test scenario and expected score. Then assign the talks to rooms and timeslots to visualize them easily. Note that you do not need to list all the timeslots and rooms declared in Timeslots and Rooms sheets.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_conclusion"&gt;Conclusion&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Instead of writing unit tests in code, business experts can specify how they want the constraints to be matched in an Excel/LibreOffice file. Developers then implement the constraints to pass these tests. This provides a more efficient way of communication between developers and domain experts.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To test score rules in an &lt;code&gt;xlsx&lt;/code&gt; file:&lt;/p&gt; &lt;/div&gt; &lt;div class="olist arabic"&gt; &lt;ol class="arabic"&gt; &lt;li&gt; &lt;p&gt;List all the required fields for your tests in the setup sheets.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For every score verification, create a separate blue test sheet with the constraint package, constraint name and expcted score.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;List only the fields that you want to use for the corresponding rule.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Set &lt;em&gt;testFileName&lt;/em&gt; in &lt;a href="https://github.com/kiegroup/optaplanner/blob/master/optaplanner-examples/src/main/test/java/org/optaplanner/examples/conferencescheduling/solver/ConferenceSchedulingScoreRulesXlsxTest.java"&gt;ConferenceSchedulingScoreRulesXlsxTest&lt;/a&gt; and run the test file.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_related_material"&gt;Related material&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://www.optaplanner.org/blog/2018/02/19/SchedulingVoxxedDaysZurich2018.html"&gt;Scheduling Voxxed Days Zurich 2018 with OptaPlanner&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt; &lt;iframe width="853" height="480" src="https://www.youtube.com/embed/R0JizNdxEjU" frameborder="0" allowfullscreen="" /&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vGKzDrM4BZk" height="1" width="1" alt=""/&gt;</content><summary>The business experts explain the business constraints to us, the developers. But how can we be sure that we understood them correctly? Or worse, how can we test that they agree among themselves once the constraints are formalized? Well, there’s one great way to do that: JUnit tests populated by *.xlsx data. We allow them to recreate a small subset of the solution in Excel/LibreOffice and let them ...</summary><dc:creator>MusaTalluzi</dc:creator><dc:date>2018-08-21T00:00:00Z</dc:date><feedburner:origLink>https://www.optaplanner.org/blog/2018/08/21/UnitTestingConstraintsWithBusinessInputFromExcelOrLibreOffice.html</feedburner:origLink></entry><entry><title>How to integrate A-MQ 6.3 on Red Hat JBoss EAP 7</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xjsCXUmWwv0/" /><category term="AM-Q" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jboss a-mq" scheme="searchisko:content:tags" /><category term="messaging" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat JBoss AMQ" scheme="searchisko:content:tags" /><category term="Red Hat JBoss EAP" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><author><name>Abraham Francisco Arellano Tavara</name></author><id>searchisko:content:id:jbossorg_blog-how_to_integrate_a_mq_6_3_on_red_hat_jboss_eap_7</id><updated>2018-08-20T11:00:48Z</updated><published>2018-08-20T11:00:48Z</published><content type="html">&lt;p&gt;This article describes in detail how to integrate &lt;a href="https://developers.redhat.com/products/amq/overview/"&gt;Red Hat A-MQ 6.3&lt;/a&gt; on &lt;a href="https://developers.redhat.com/products/eap/download/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt; (EAP) 7 and covers in detail the admin-object configuration, especially the pool-name configuration. The attribute pool-name for the admin-object explanation can lead to confusion. In this post, I will try to clarify many of the steps, give an overview of the components, and how they fit together.&lt;/p&gt; &lt;p&gt;The JBoss EAP requires the configuration of a resource adapter as a central component for integration with the A-MQ 6.3. In addition, the MDBs configuration on the EAP is required to enable the JMS consumers. On the A-MQ 6.3, the configuration of the Transport Connectors is required to open the communication channel with the EAP.&lt;/p&gt; &lt;p&gt;All the steps required to configure EAP 7 to use A-MQ 6.3 as an external JMS broker are described here:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#genericra"&gt;Generic Resource Adapter configuration on JBoss EAP 7&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#mdb"&gt;MDB configuration for EJB subsystem&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#transport"&gt;A-MQ ports/transport-connectors/security configuration&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-507347"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Overview of JBoss EAP and A-MQ components&lt;/h2&gt; &lt;p&gt;First, is important to understand the components involved in the configuration and the relationship between them.&lt;/p&gt; &lt;h3&gt;Resource Adapter&lt;/h3&gt; &lt;p&gt;The resource adapter is the central component for the JBoss EAP configuration. It provides the link from the EAP to the A-MQ broker.&lt;/p&gt; &lt;p&gt;In a nutshell, a resource adapter is a deployable Java EE component (usually a .rar file). The resource adapter provides communication between a Java EE application (usually deployed on the JBoss EAP instance) and an Enterprise Information System (EIS) using the Java Connector Architecture (JCA) specification.&lt;/p&gt; &lt;p&gt;A resource adapter is often provided by EIS vendors to allow easy integration of their products with Java EE applications.&lt;/p&gt; &lt;p&gt;On JBoss EAP 7, the resource adapters are defined in the &lt;code&gt;resource-adapter&lt;/code&gt; subsystem.&lt;/p&gt; &lt;h3&gt;MDB&lt;/h3&gt; &lt;p&gt;The MDB configuration in JBoss EAP provides the capability to the Java applications to create a consumer of the A-MQ linked to JBoss EAP. In addition, the MDB pool provides a constraint on the number of instances and sessions available.&lt;/p&gt; &lt;h3&gt;Transport Connectors&lt;/h3&gt; &lt;p&gt;The Transport Connectors are endpoints defined on the A-MQ broker that allows client-broker communication. The Transport Connectors can be configured using different Transport Protocols (TCP, SSL, HTTP, HTTPS, etc.) and can support different Wire Protocols (Openwire, STOMP, AMQP, etc.)&lt;/p&gt; &lt;h3&gt;Components integration overview&lt;/h3&gt; &lt;p&gt;The image below depicts in a simple way how the components described above are related.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-513677 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/EAP-7.1-integration-A-MQ-6.3.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/EAP-7.1-integration-A-MQ-6.3.png" alt="" width="761" height="581" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/EAP-7.1-integration-A-MQ-6.3.png 761w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/EAP-7.1-integration-A-MQ-6.3-300x229.png 300w" sizes="(max-width: 761px) 100vw, 761px" /&gt;&lt;/p&gt; &lt;h2&gt;&lt;a name="genericra"&gt;&lt;/a&gt;Generic Resource Adapter configuration on EAP 7&lt;/h2&gt; &lt;p&gt;In JBoss EAP 7.1, the recommended messaging broker is AMQ 7, which has an integrated resource adapter in the messaging subsystem. However, is possible to use a different messaging broker or a legacy A-MQ messaging broker.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Extract the resource adapter from the A-MQ 6.3 distribution.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The initial step is to extract the .rar file from the A-MQ 6.3 distribution to a more accessible location. The resource adapter zip container is located in $AMQ_HOME/extras/apache-activemq-5.11.0.redhat-[&lt;em&gt;LATEST_VERSION&lt;/em&gt;]-bin.zip.&lt;/p&gt; &lt;pre&gt;unzip $AMQ_HOME/extras/apache-activemq-5.11.0.redhat-[&lt;em&gt;LATEST_VERSION&lt;/em&gt;]-bin.zip \ -d /tmp &lt;/pre&gt; &lt;p&gt;Extract the file to a known location: [AMQ_RAR_DIRECTORY].&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Deploy the resource adapter in a standalone/domain JBoss server using the CLI.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;Server$ jboss-cli.sh&lt;/pre&gt; &lt;p&gt;In a standalone server:&lt;/p&gt; &lt;pre&gt;Server$ deploy /tmp/apache-activemq-5.11.0.redhat-[&lt;em&gt;LATEST_VERSION&lt;/em&gt;]/lib/optional\ /activemq-rar-5.11.0.redhat-[&lt;em&gt;LATEST_VERSION&lt;/em&gt;].rar &lt;/pre&gt; &lt;p&gt;In a domain managed server:&lt;/p&gt; &lt;pre&gt;Server$ deploy /tmp/apache-activemq-5.11.0.redhat-[&lt;em&gt;LATEST_VERSION&lt;/em&gt;]/lib/optional\ /activemq-rar-5.11.0.redhat-[&lt;em&gt;LATEST_VERSION&lt;/em&gt;].rar \ –server-groups=[SERVER_GROUP_1],[SERVER_GROUP_2],... &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Deploy the resource adapter using the management console.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Is also possible to deploy the resource adapter using the management console&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Manual resource adapter deployment in a standalone server using the deployment scanner:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In order to deploy a resource adapter manually to a standalone server, copy the resource adapter archive to the server deployments directory $EAP_HOME/standalone/deployments/. As a result, the scanner will inspect the deployments directory and deploy the resource adapter.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;New profiles for domain managed server:&lt;/strong&gt;&lt;br /&gt; Probably, it is a requirement to have different server groups working with different broker technology or configuration. In order to achieve a better separation of concerns regarding access to JMS services, a new profile that contains the broker configuration can be created.&lt;/p&gt; &lt;h3&gt;Resource adapter manual configuration&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Add a resource adapter element to the resource-adapters subsystem:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&amp;#60;subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"&amp;#62; &amp;#60;resource-adapters&amp;#62; &amp;#60;resource-adapter id="activemq-rar.rar" statistics-enabled="true"&amp;#62; &amp;#60;/resource-adapter&amp;#62; &amp;#60;/resource-adapters&amp;#62; &amp;#60;/subsystem&amp;#62; &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Definition of the archive of the resource adapter:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&amp;#60;subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"&amp;#62; &amp;#60;resource-adapters&amp;#62; &amp;#60;resource-adapter id="activemq-rar.rar" statistics-enabled="true"&amp;#62; &amp;#60;archive&amp;#62; activemq-rar.rar &amp;#60;/archive&amp;#62; &amp;#60;/resource-adapter&amp;#62; &amp;#60;/resource-adapters&amp;#62; &amp;#60;/subsystem&amp;#62; &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Set up different configuration properties:&lt;/strong&gt;&lt;br /&gt; First, set up the server URL, the access credentials, and the type of transaction support.&lt;/p&gt; &lt;pre&gt;&amp;#60;subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"&amp;#62; &amp;#60;resource-adapters&amp;#62; &amp;#60;resource-adapter id="activemq-rar.rar" statistics-enabled="true"&amp;#62; &amp;#60;archive&amp;#62; activemq-rar.rar &amp;#60;/archive&amp;#62; &amp;#60;transaction-support&amp;#62;XATransaction&amp;#60;/transaction-support&amp;#62; &amp;#60;config-property name="ServerUrl"&amp;#62; tcp://[BROKER_HOST]:[BROKER_PORT] &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="UserName"&amp;#62; myusername &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="Password"&amp;#62; mypassword &amp;#60;/config-property&amp;#62; &amp;#60;/resource-adapter&amp;#62; &amp;#60;/resource-adapters&amp;#62; &amp;#60;/subsystem&amp;#62; &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Establish connection definitions:&lt;/strong&gt;&lt;br /&gt; A possible connection-definition class-name can be: org.apache.activemq.ra.ActiveMQManagedConnectionFactory. The election depends on the type of factory you have to use.&lt;/p&gt; &lt;pre&gt;&amp;#60;subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"&amp;#62; &amp;#60;resource-adapters&amp;#62; &amp;#60;resource-adapter id="activemq-rar.rar" statistics-enabled="true"&amp;#62; &amp;#60;archive&amp;#62; activemq-rar.rar &amp;#60;/archive&amp;#62; &amp;#60;transaction-support&amp;#62;XATransaction&amp;#60;/transaction-support&amp;#62; &amp;#60;config-property name="ServerUrl"&amp;#62; tcp://[BROKER_HOST]:[BROKER_PORT] &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="UserName"&amp;#62; myusername &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="Password"&amp;#62; mypassword &amp;#60;/config-property&amp;#62; &amp;#60;connection-definitions&amp;#62; &amp;#60;connection-definition class-name="com.ra.EISManagedConnectionFactory" jndi-name="java:/jms/connection/amq/ManagedConnectionFactory" enabled="true" pool-name="A-MQ"&amp;#62; &amp;#60;xa-pool&amp;#62; &amp;#60;min-pool-size&amp;#62;1&amp;#60;/min-pool-size&amp;#62; &amp;#60;max-pool-size&amp;#62;50&amp;#60;/max-pool-size&amp;#62; &amp;#60;prefill&amp;#62;false&amp;#60;/prefill&amp;#62; &amp;#60;is-same-rm-override&amp;#62;false&amp;#60;/is-same-rm-override&amp;#62; &amp;#60;/xa-pool&amp;#62; &amp;#60;validation&amp;#62; &amp;#60;use-fast-fail&amp;#62;false&amp;#60;/use-fast-fail&amp;#62; &amp;#60;/validation&amp;#62; &amp;#60;/connection-definition&amp;#62; &amp;#60;/connection-definitions&amp;#62; &amp;#60;/resource-adapter&amp;#62; &amp;#60;/resource-adapters&amp;#62; &amp;#60;/subsystem&amp;#62; &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Configure XA Recovery plugin:&lt;/strong&gt;&lt;br /&gt; The &amp;#8220;XA recovery&amp;#8221; is the process that updates or rollback a transaction if one of the participant crash or is unavailable. XA recovery happens without user intervention.&lt;/p&gt; &lt;p&gt;Each XA resource needs to have a recovery module associated with its configuration.&lt;/p&gt; &lt;pre&gt;&amp;#60;subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"&amp;#62; &amp;#60;resource-adapters&amp;#62; &amp;#60;resource-adapter id="activemq-rar.rar" statistics-enabled="true"&amp;#62; &amp;#60;archive&amp;#62; activemq-rar.rar &amp;#60;/archive&amp;#62; &amp;#60;transaction-support&amp;#62;XATransaction&amp;#60;/transaction-support&amp;#62; &amp;#60;config-property name="ServerUrl"&amp;#62; tcp://[BROKER_HOST]:[BROKER_PORT] &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="UserName"&amp;#62; myusername &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="Password"&amp;#62; mypassword &amp;#60;/config-property&amp;#62; &amp;#60;connection-definitions&amp;#62; &amp;#60;connection-definition class-name="com.ra.EISManagedConnectionFactory" jndi-name="java:/jms/connection/amq/ManagedConnectionFactory" enabled="true" pool-name="A-MQ"&amp;#62; &amp;#60;xa-pool&amp;#62; &amp;#60;min-pool-size&amp;#62;1&amp;#60;/min-pool-size&amp;#62; &amp;#60;max-pool-size&amp;#62;50&amp;#60;/max-pool-size&amp;#62; &amp;#60;prefill&amp;#62;false&amp;#60;/prefill&amp;#62; &amp;#60;is-same-rm-override&amp;#62;false&amp;#60;/is-same-rm-override&amp;#62; &amp;#60;/xa-pool&amp;#62; &amp;#60;validation&amp;#62; &amp;#60;use-fast-fail&amp;#62;false&amp;#60;/use-fast-fail&amp;#62; &amp;#60;/validation&amp;#62; &amp;#60;recovery&amp;#62; &amp;#60;recover-credential&amp;#62; &amp;#60;user-name&amp;#62;recoveryuser&amp;#60;/user-name&amp;#62; &amp;#60;password&amp;#62;recoverypassword&amp;#60;/password&amp;#62; &amp;#60;/recover-credential&amp;#62; &amp;#60;recover-plugin class-name="org.jboss.jca.core.recovery.ConfigurableRecoveryPlugin"&amp;#62; &amp;#60;config-property name="enableIsValid"&amp;#62; false &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="isValidOverride"&amp;#62; true &amp;#60;/config-property&amp;#62; &amp;#60;/recover-plugin&amp;#62; &amp;#60;/recovery&amp;#62; &amp;#60;/connection-definition&amp;#62; &amp;#60;/connection-definitions&amp;#62; &amp;#60;/resource-adapter&amp;#62; &amp;#60;/resource-adapters&amp;#62; &amp;#60;/subsystem&amp;#62; &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Admin objects setup and configuration:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The admin objects are created in order to provide JNDI lookup of JMS queues for JBoss EAP applications.&lt;/p&gt; &lt;p&gt;The attribute that often causes problems to define an unanswered question is the pool-name attribute of the admin-object. The attribute &amp;#8220;pool-name is not implemented in JBoss EAP, that means, this attribute should not be used.&lt;/p&gt; &lt;pre&gt;&amp;#60;subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"&amp;#62; &amp;#60;resource-adapters&amp;#62; &amp;#60;resource-adapter id="activemq-rar.rar" statistics-enabled="true"&amp;#62; &amp;#60;archive&amp;#62; activemq-rar.rar &amp;#60;/archive&amp;#62; &amp;#60;transaction-support&amp;#62;XATransaction&amp;#60;/transaction-support&amp;#62; &amp;#60;config-property name="ServerUrl"&amp;#62; tcp://[BROKER_HOST]:[BROKER_PORT] &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="UserName"&amp;#62; myusername &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="Password"&amp;#62; mypassword &amp;#60;/config-property&amp;#62; &amp;#60;connection-definitions&amp;#62; &amp;#60;connection-definition class-name="com.ra.EISManagedConnectionFactory" jndi-name="java:/jms/connection/amq/ManagedConnectionFactory" enabled="true" pool-name="A-MQ"&amp;#62; &amp;#60;xa-pool&amp;#62; &amp;#60;min-pool-size&amp;#62;1&amp;#60;/min-pool-size&amp;#62; &amp;#60;max-pool-size&amp;#62;50&amp;#60;/max-pool-size&amp;#62; &amp;#60;prefill&amp;#62;false&amp;#60;/prefill&amp;#62; &amp;#60;is-same-rm-override&amp;#62;false&amp;#60;/is-same-rm-override&amp;#62; &amp;#60;/xa-pool&amp;#62; &amp;#60;validation&amp;#62; &amp;#60;use-fast-fail&amp;#62;false&amp;#60;/use-fast-fail&amp;#62; &amp;#60;/validation&amp;#62; &amp;#60;recovery&amp;#62; &amp;#60;recover-credential&amp;#62; &amp;#60;user-name&amp;#62;recoveryuser&amp;#60;/user-name&amp;#62; &amp;#60;password&amp;#62;recoverypassword&amp;#60;/password&amp;#62; &amp;#60;/recover-credential&amp;#62; &amp;#60;recover-plugin class-name="org.jboss.jca.core.recovery.ConfigurableRecoveryPlugin"&amp;#62; &amp;#60;config-property name="enableIsValid"&amp;#62; false &amp;#60;/config-property&amp;#62; &amp;#60;config-property name="isValidOverride"&amp;#62; true &amp;#60;/config-property&amp;#62; &amp;#60;/recover-plugin&amp;#62; &amp;#60;/recovery&amp;#62; &amp;#60;/connection-definition&amp;#62; &amp;#60;/connection-definitions&amp;#62; &amp;#60;admin-objects&amp;#62; &amp;#60;admin-object class-name="org.apache.activemq.command.ActiveMQQueue" jndi-name="java:/jms/myapp/myqueuename" pool-name="MY_POOL_NAME"&amp;#62; &amp;#60;config-property name="PhysicalName"&amp;#62; myapp_mycontext_myqueuename &amp;#60;/config-property&amp;#62; &amp;#60;/admin-object&amp;#62; &amp;#60;/admin-objects&amp;#62; &amp;#60;/resource-adapter&amp;#62; &amp;#60;/resource-adapters&amp;#62; &amp;#60;/subsystem&amp;#62; &lt;/pre&gt; &lt;h3&gt;Resource adapter CLI configuration&lt;/h3&gt; &lt;p&gt;You can configure resource adapters using the management interfaces. I show below how to configure a resource adapter using the management CLI. If you are using this document as a reference for other resource adapters, it is important to check the vendor’s documentation for supported properties and other important information.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Add a resource adapter element to the resource-adapters subsystem and define the archive of the resource adapter:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=eis.rar:add(archive=eis.rar, \ transaction-support=XATransaction) &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Define different configuration properties:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Add the server configuration property.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=activemq-rar.rar/\ config-properties=server:add(value=[$AMQ_BROKER_URL]) &lt;/pre&gt; &lt;p&gt;Add the port configuration property.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=activemq-rar.rar/\ config-properties=port:add(value=[$AMQ_BROKER_PORT]) &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Define connection definitions:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Add a connection definition for a managed connection factory.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=eis.rar/\ connection-definitions=cfName:add(class-name=com.ra.EISManagedConnectionFactory, \ jndi-name=java:/jms/connection/amq/ManagedConnectionFactory) &lt;/pre&gt; &lt;p&gt;Configure a managed connection factory configuration property.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=eis.rar/connection-definitions=cfName/\ config-properties=name:add(value=Acme Inc) &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Configure XA Recovery plugin:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In order to correctly define the &amp;#8220;recovery-plugin-properties&amp;#8221; using the CLI commands, first, add &amp;#8220;recovery-plugin-class-name&amp;#8221;.&lt;/p&gt; &lt;pre&gt;/subsystem=datasources/xa-data-source=test-xa-datasource/\ :write-attribute(name=recovery-plugin-class-name,\ value=org.jboss.jca.core.recovery.ConfigurableRecoveryPlugin) &lt;/pre&gt; &lt;p&gt;Then add the &amp;#8220;recovery-plugin-properties&amp;#8221;.&lt;/p&gt; &lt;pre&gt;/subsystem=datasources/xa-data-source=test-xa-datasource/\ :write-attribute(name=recovery-plugin-properties,\ value={"EnableIsValid" =&amp;#62; "false",\ "IsValidOverride" =&amp;#62; "true",\ "EnableClose" =&amp;#62; "false"}) &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Admin objects setup and configuration:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Add an admin object.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=activemq-rar.rar/\ admin-objects=aoName:add(\ class-name=org.apache.activemq.command.ActiveMQQueue, \ jndi-name=java:/jms/myapp/myqueuename) &lt;/pre&gt; &lt;p&gt;Configure an admin object configuration property.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=activemq-rar.rar/\ admin-objects=aoName/config-properties=threshold:add(value=10) &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Activate the Resource Adapter:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Activate the resource adapter.&lt;/p&gt; &lt;pre&gt;/subsystem=resource-adapters/resource-adapter=activemq-rar.rar:activate &lt;/pre&gt; &lt;h2&gt;&lt;a name="mdb"&gt;&lt;/a&gt;MDB configuration for EJB subsystem&lt;/h2&gt; &lt;p&gt;First is important to understand what an MDB is. MDBs are a special kind of stateless session beans and they are the JMS consumer of a specific queue.&lt;/p&gt; &lt;p&gt;They implement a method called onMessage(Message message) executed when a JMS destination on which the MDB is listening receives a message.&lt;/p&gt; &lt;p&gt;The JMS consumer is responsible to trigger a MDBs asynchronously.&lt;/p&gt; &lt;p&gt;By default, the MDBs have 16 sessions to process messages concurrently.&lt;/p&gt; &lt;p&gt;Add the requisite message-driven bean configuration to the urn:jboss:domain:ejb3 subsystem in the JBoss EAP configuration.&lt;/p&gt; &lt;pre&gt;&amp;#60;mdb&amp;#62; &amp;#60;resource-adapter-ref resource-adapter-name="activemq-rar.rar"/&amp;#62; &amp;#60;bean-instance-pool-ref pool-name="mdb-strict-max-pool"/&amp;#62; &amp;#60;/mdb&amp;#62; &lt;/pre&gt; &lt;p&gt;In addition, define the MDB pool:&lt;/p&gt; &lt;pre&gt;&amp;#60;pools&amp;#62; &amp;#60;bean-instance-pools&amp;#62; &amp;#60;strict-max-pool name="slsb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/&amp;#62; &amp;#60;strict-max-pool name="mdb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/&amp;#62; &amp;#60;/bean-instance-pools&amp;#62; &amp;#60;/pools&amp;#62; &lt;/pre&gt; &lt;p&gt;The final standalone.xml configuration should look like:&lt;/p&gt; &lt;pre&gt;&amp;#60;server ...&amp;#62; ... &amp;#60;profile&amp;#62; ... &amp;#60;subsystem xmlns="urn:jboss:domain:ejb3:..."&amp;#62; ... &amp;#60;mdb&amp;#62; &amp;#60;resource-adapter-ref resource-adapter-name="activemq-rar.rar"/&amp;#62; &amp;#60;bean-instance-pool-ref pool-name="mdb-strict-max-pool"/&amp;#62; &amp;#60;/mdb&amp;#62; &amp;#60;pools&amp;#62; &amp;#60;bean-instance-pools&amp;#62; &amp;#60;strict-max-pool name="slsb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/&amp;#62; &amp;#60;strict-max-pool name="mdb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/&amp;#62; &amp;#60;/bean-instance-pools&amp;#62; &amp;#60;/pools&amp;#62; ... &amp;#60;/subsystem&amp;#62; ... &amp;#60;/profile&amp;#62; ... &amp;#60;/server&amp;#62; &lt;/pre&gt; &lt;h2&gt;&lt;a name="transport"&gt;&lt;/a&gt;A-MQ ports/transport-connectors&lt;/h2&gt; &lt;p&gt;First, the A-MQ configuration requires the transport connectors that define the endpoint used by JBoss EAP to integrate the resource adapter.&lt;/p&gt; &lt;p&gt;Implement the following configuration in the activemq.xml:&lt;/p&gt; &lt;pre&gt;&amp;#60;transportConnectors&amp;#62; &amp;#60;transportConnector name="openwire-client" uri="nio://0.0.0.0:[BROKER_PORT]?[TRANSPORT_OPTIONS]"/&amp;#62; &amp;#60;/transportConnectors&amp;#62; &lt;/pre&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;This article provides a detailed description of Red Hat JBoss EAP 7 integration with A-MQ 6.3 and the admin-object configuration, which is a complex process if the required steps are not clear for the integrator. This article covers the admin-object setup and the pool-name attribute in great detail and provides a good hint regarding the correct configuration.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;linkname=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F20%2Fhow-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7%2F&amp;#38;title=How%20to%20integrate%20A-MQ%206.3%20on%20Red%20Hat%20JBoss%20EAP%207" data-a2a-url="https://developers.redhat.com/blog/2018/08/20/how-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7/" data-a2a-title="How to integrate A-MQ 6.3 on Red Hat JBoss EAP 7"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/20/how-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7/"&gt;How to integrate A-MQ 6.3 on Red Hat JBoss EAP 7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xjsCXUmWwv0" height="1" width="1" alt=""/&gt;</content><summary>This article describes in detail how to integrate Red Hat A-MQ 6.3 on Red Hat JBoss Enterprise Application Platform (EAP) 7 and covers in detail the admin-object configuration, especially the pool-name configuration. The attribute pool-name for the admin-object explanation can lead to confusion. In this post, I will try to clarify many of the steps, give an overview of the components, and how they...</summary><dc:creator>Abraham Francisco Arellano Tavara</dc:creator><dc:date>2018-08-20T11:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/20/how-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7/</feedburner:origLink></entry><entry><title>Keycloak 4.3.0.Final Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EPt_dIb-EKM/keycloak-430final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_3_0_final_released</id><updated>2018-08-16T10:14:09Z</updated><published>2018-08-16T10:14:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.3.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EPt_dIb-EKM" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2018-08-16T10:14:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/08/keycloak-430final-released.html</feedburner:origLink></entry><entry><title>Announcing Thorntail 2.1.0.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/10OsUYleYyA/announcing-thorntail-2-1-0-final" /><category term="feed_group_name_wildfly_swarm" scheme="searchisko:content:tags" /><category term="feed_name_wildfly_swarm" scheme="searchisko:content:tags" /><author><name>The Thornail Team</name></author><id>searchisko:content:id:jbossorg_blog-announcing_thorntail_2_1_0_final</id><updated>2018-08-16T05:00:00Z</updated><published>2018-08-16T05:00:00Z</published><content type="html">&lt;div class="sect1"&gt; &lt;h2 id="_thorntail_2_1_0_final"&gt;Thorntail 2.1.0.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On this day in 1896 Gold was first discovered in Klondike, found at Bonanza Creek, Alaska by George Carmack.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And now 122 years later, 2.1.0.Final is released!&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_what_s_new"&gt;What’s New?&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;MicroProfile 1.3 with SmallRye&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Automated migration from WildFly Swarm&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;OpenTracing and Jaeger changes&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New JOSE fraction&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Old &lt;code&gt;config-api-runtime&lt;/code&gt; fixed&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Consul update&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/10OsUYleYyA" height="1" width="1" alt=""/&gt;</content><summary>Thorntail 2.1.0.Final On this day in 1896 Gold was first discovered in Klondike, found at Bonanza Creek, Alaska by George Carmack. And now 122 years later, 2.1.0.Final is released! What’s New? MicroProfile 1.3 with SmallRye Automated migration from WildFly Swarm OpenTracing and Jaeger changes New JOSE fraction Old config-api-runtime fixed Consul update</summary><dc:creator>The Thornail Team</dc:creator><dc:date>2018-08-16T05:00:00Z</dc:date><feedburner:origLink>https://wildfly-swarm.io/posts/announcing-thorntail-2-1-0-final</feedburner:origLink></entry><entry><title>How to enable sudo on RHEL</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DLUzZOYzIq0/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><category term="sudo" scheme="searchisko:content:tags" /><category term="Sysadmin for Developers" scheme="searchisko:content:tags" /><author><name>Rob Terzi</name></author><id>searchisko:content:id:jbossorg_blog-how_to_enable_sudo_on_rhel</id><updated>2018-08-15T17:23:53Z</updated><published>2018-08-15T17:23:53Z</published><content type="html">&lt;p&gt;You’ve probably seen tutorials that use &lt;code&gt;sudo&lt;/code&gt; for running administrative commands as root. However when you try it, you get told your user ID is “not in the sudoers file, this incident will be reported.”  For developers, &lt;code&gt;sudo&lt;/code&gt; can be very useful for running steps that require root access in build scripts.&lt;/p&gt; &lt;p&gt;This article covers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;How to configure &lt;code&gt;sudo&lt;/code&gt; access on &lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) so you won’t need to use &lt;code&gt;su&lt;/code&gt; and keep entering the root password&lt;/li&gt; &lt;li&gt;Configuring &lt;code&gt;sudo&lt;/code&gt; to not ask for your password&lt;/li&gt; &lt;li&gt;How to enable &lt;code&gt;sudo&lt;/code&gt; during system installation&lt;/li&gt; &lt;li&gt;Why &lt;code&gt;sudo&lt;/code&gt; seems to work out of the box for some users and not others&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-514117"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;TL;DR: Basic &lt;code&gt;sudo&lt;/code&gt;&lt;/h2&gt; &lt;p&gt;To enable &lt;code&gt;sudo&lt;/code&gt; for your user ID on RHEL, add your user ID to the &lt;code&gt;wheel&lt;/code&gt; group:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Become root by running&lt;code&gt;su&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;usermod -aG wheel &lt;em&gt;your_user_id&lt;/em&gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Log out and back in again&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now you will be able to use &lt;code&gt;sudo&lt;/code&gt; when logged in under your normal user ID. You will be asked to enter the password for &lt;em&gt;your user ID&lt;/em&gt; when you run a &lt;code&gt;sudo&lt;/code&gt; command. For the next five minutes, &lt;code&gt;sudo&lt;/code&gt; will remember that you’ve been authenticated, so you won’t be asked for your password again.&lt;/p&gt; &lt;p&gt;This works because the default &lt;code&gt;/etc/sudoers&lt;/code&gt; file on RHEL contains the following line:&lt;/p&gt; &lt;pre&gt;%wheel ALL=(ALL) ALL&lt;/pre&gt; &lt;p&gt;That line enables all users in group &lt;code&gt;wheel&lt;/code&gt; to run any command with &lt;code&gt;sudo&lt;/code&gt;, but users will be asked to prove their identity with their password.  Note: there is no comment symbol (&lt;code&gt;#&lt;/code&gt;) in front of that line.&lt;/p&gt; &lt;p&gt;After logging out and back in again, you can verify that you are in group &lt;code&gt;wheel&lt;/code&gt; by running the &lt;code&gt;id&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ id uid=1000(rct) gid=10(wheel) groups=10(wheel),1000(rct) &lt;/pre&gt; &lt;h2&gt;Using &lt;code&gt;sudo&lt;/code&gt; without a password&lt;/h2&gt; &lt;p&gt;You can also configure &lt;code&gt;sudo&lt;/code&gt; to not ask for a password to verify your identity. For many situations (such as for real servers) this is would be considered too much of a security risk. However, for developers running a RHEL VM on their laptop, this is a reasonable thing to do since access to their laptops is probably already protected by a password.&lt;/p&gt; &lt;p&gt;To set this up, two different methods are shown. You can either edit &lt;code&gt;/etc/sudoers&lt;/code&gt; or you can create a new file in &lt;code&gt;/etc/sudoers.d/&lt;/code&gt;.  The first is more straightforward, but the latter is easier to script and automate.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Edit &lt;code&gt;/etc/sudoers&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;As root, run &lt;code&gt;visudo&lt;/code&gt; to edit &lt;code&gt;/etc/sudoers&lt;/code&gt; and make the following changes. The advantage of using &lt;code&gt;visudo&lt;/code&gt; is that it will validate the changes to the file.&lt;/p&gt; &lt;p&gt;The default &lt;code&gt;/etc/sudoers&lt;/code&gt; file contains two lines for group &lt;code&gt;wheel&lt;/code&gt;; the &lt;code&gt;NOPASSWD:&lt;/code&gt; line is commented out.  Uncomment that line and comment out the &lt;code&gt;wheel&lt;/code&gt; line without &lt;code&gt;NOPASSWD&lt;/code&gt;. When you are done, it should look like this:&lt;/p&gt; &lt;pre&gt;## Allows people in group wheel to run all commands # %wheel ALL=(ALL) ALL ## Same thing without a password %wheel ALL=(ALL) NOPASSWD: ALL&lt;/pre&gt; &lt;h3&gt;Alternate method: Create a new file in &lt;code&gt;/etc/sudoers.d&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;You can create files in &lt;code&gt;/etc/sudoers.d&lt;/code&gt; that will be part of the &lt;code&gt;sudo&lt;/code&gt; configuration. This method is easier to script and automate. Also, since this doesn’t involve changing groups, you won’t have to log out and back in again. Change &lt;em&gt;your_id&lt;/em&gt; to your user ID.&lt;/p&gt; &lt;pre&gt;$ su - # echo -e “&lt;em&gt;your_id&lt;/em&gt;\tALL=(ALL)\tNOPASSWD: ALL" &amp;#62; /etc/sudoers.d/020_sudo_for_me # cat /etc/suders.d/020_my_sudo &lt;em&gt;your_id&lt;/em&gt; ALL=(ALL) NOPASSWD: ALL &lt;/pre&gt; &lt;h2&gt;Enable &lt;code&gt;sudo&lt;/code&gt; during system installation&lt;/h2&gt; &lt;p&gt;During RHEL system installation, you can enable &lt;code&gt;sudo&lt;/code&gt; for the user you create during the installation. There is an often overlooked (and misunderstood) &lt;em&gt;Make this user administrator&lt;/em&gt; option on the &lt;em&gt;User Creation&lt;/em&gt; screen where you enter the user ID and password. If you select the &lt;em&gt;Make this user administrator&lt;/em&gt; box, the user will be made part of the &lt;code&gt;wheel&lt;/code&gt; group during the installation.&lt;/p&gt; &lt;p&gt;I have to admit, I overlooked this option and didn’t understand what it did until I stumbled on &lt;a href="https://fedoramagazine.org/howto-use-sudo/"&gt;this article in &lt;em&gt;Fedora Magazine&lt;/em&gt;&lt;/a&gt;. While the article is about Fedora, this functionality is essentially the same for RHEL, since Fedora is the upstream community project that is used as the basis for RHEL.&lt;/p&gt; &lt;p&gt;For me, this finally cleared up the mystery of whys &lt;code&gt;sudo&lt;/code&gt; seem to work out of the box for some RHEL users but not others. This isn’t really explained well in the RHEL installation guide.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/08/rhel_7_createuser.png"&gt;&lt;img class=" aligncenter wp-image-514137 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/rhel_7_createuser-1024x416.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/rhel_7_createuser-1024x416.png" alt="RHEL 7 Install Create User" width="640" height="260" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/rhel_7_createuser.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/rhel_7_createuser-300x122.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/rhel_7_createuser-768x312.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;For more information&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;See the &amp;#8220;&lt;a href="http://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/chap-Gaining_Privileges.html"&gt;Gaining Privileges&lt;/a&gt;&amp;#8221; chapter in the &lt;em&gt;Red Hat Enterprise Linux 7 System Administrator&amp;#8217;s Guide&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;em&gt;See &amp;#8220;&lt;/em&gt;&lt;a href="https://access.redhat.com/solutions/1527"&gt;How to allow a normal user to run commands as root user using sudo&lt;/a&gt;&lt;em&gt;.&amp;#8221; &lt;/em&gt;This article is on the Red Hat Customer Portal. Join the Red Hat Developer Program to get a Red Hat ID, which will let you view the knowledgebase articles on the Red Hat Customer Portal.&lt;/li&gt; &lt;li&gt;See the &amp;#8220;&lt;a href="https://fedoramagazine.org/howto-use-sudo/"&gt;Configure your Fedora system to use sudo&lt;/a&gt;&amp;#8221; article in &lt;em&gt;Fedora Magazine&lt;/em&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;linkname=How%20to%20enable%20sudo%20on%20RHEL" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F15%2Fhow-to-enable-sudo-on-rhel%2F&amp;#38;title=How%20to%20enable%20sudo%20on%20RHEL" data-a2a-url="https://developers.redhat.com/blog/2018/08/15/how-to-enable-sudo-on-rhel/" data-a2a-title="How to enable sudo on RHEL"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/15/how-to-enable-sudo-on-rhel/"&gt;How to enable sudo on RHEL&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DLUzZOYzIq0" height="1" width="1" alt=""/&gt;</content><summary>You’ve probably seen tutorials that use sudo for running administrative commands as root. However when you try it, you get told your user ID is “not in the sudoers file, this incident will be reported.”  For developers, sudo can be very useful for running steps that require root access in build scripts. This article covers: How to configure sudo access on Red Hat Enterprise Linux (RHEL) so you won...</summary><dc:creator>Rob Terzi</dc:creator><dc:date>2018-08-15T17:23:53Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/15/how-to-enable-sudo-on-rhel/</feedburner:origLink></entry><entry><title>Improving rsync performance with GlusterFS</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lL-aLMBlZgg/" /><category term="distributed file systems" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gluster" scheme="searchisko:content:tags" /><category term="GlusterFS" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="Performance Tuning" scheme="searchisko:content:tags" /><category term="Red Hat Gluster" scheme="searchisko:content:tags" /><category term="Red Hat Gluster Storage" scheme="searchisko:content:tags" /><category term="rsync" scheme="searchisko:content:tags" /><category term="storage" scheme="searchisko:content:tags" /><author><name>Benny Turner</name></author><id>searchisko:content:id:jbossorg_blog-improving_rsync_performance_with_glusterfs</id><updated>2018-08-14T11:00:11Z</updated><published>2018-08-14T11:00:11Z</published><content type="html">&lt;p&gt;&lt;a href="https://rsync.samba.org/"&gt;Rsync&lt;/a&gt; is a particularly tough workload for &lt;a href="https://redhatstorage.redhat.com/products/glusterfs/"&gt;GlusterFS&lt;/a&gt; because with its defaults, it exercises some of the worst case operations for GlusterFS. GlusterFS is the core of Red Hat Gluster&amp;#8217;s scale-out storage solution. Gluster is an open, software-defined storage (SDS) platform that is designed to scale out to handle data intensive tasks across many servers in physical, virtual, or cloud deployments. Since GlusterFS is a POSIX compatible distributed file system, getting the best performance from rsync requires some tuning/tweaking on both sides.&lt;/p&gt; &lt;p&gt;In this post, I will go through some of the pain points and the different tunables for working around the pain points.  Getting rsync to run as fast on GlusterFS as it would on a local file system is not really feasible given its architecture, but below I describe how to get as close as possible.&lt;/p&gt; &lt;p&gt;&lt;span id="more-484507"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;1)  The main issue with rsync and GlusterFS is rsync uses the &amp;#8220;write new then rename&amp;#8221; idiom when creating files.  The means that for every file created, GlusterFS is forced to rename the file, which is by far the most expensive file operation (FOP).  The Gluster distributed hash table (DHT) developers recognized the issue with &amp;#8220;write new then rename&amp;#8221; workloads and added a couple tunables to help this workload. The following is from the documentation:&lt;/p&gt; &lt;p&gt;&lt;em&gt;&amp;#8220;With the file-lookup mechanisms we already have in place, it&amp;#8217;s not necessary to move a file from one brick to another when it&amp;#8217;s renamed &amp;#8211; even across directories. It will still be found, albeit a little less efficiently. The first client to look for it after the rename will add a linkfile, which every other client will follow from then on. Also, every client that has found the file once will continue to find it based on its cached location, without any network traffic at all. Because the extra lookup cost is small, and the movement cost might be very large, DHT renames the file &amp;#8220;in place&amp;#8221; on its current brick instead (taking advantage of the fact that directories exist everywhere).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;This optimization is further extended to handle cases where renames are very common. For example, rsync and similar tools often use a &amp;#8220;write new then rename&amp;#8221; idiom in which a file &amp;#8220;xxx&amp;#8221; is actually written as &amp;#8220;.xxx.1234&amp;#8221; and then moved into place only after its contents have been fully written. To make this process more efficient, DHT uses a regular expression to separate the permanent part of a file&amp;#8217;s name (in this case &amp;#8220;xxx&amp;#8221;) from what is likely to be a temporary part (the leading &amp;#8220;.&amp;#8221; and trailing &amp;#8220;.1234&amp;#8221;). That way, after the file is renamed it will be in its correct hashed location &amp;#8211; which it wouldn&amp;#8217;t be otherwise if &amp;#8220;xxx&amp;#8221; and &amp;#8220;.xxx.1234&amp;#8221; hash differently &amp;#8211; and no linkfiles or broadcast lookups will be necessary.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;In fact, there are two regular expressions available for this purpose &amp;#8211; cluster.rsync-hash-regex and cluster.extra-hash-regex. As its name implies, rsync-hash-regex defaults to the pattern that regex uses, while extra-hash-regex can be set by the user to support a second tool using the same temporary-file idiom.&amp;#8221;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;pre&gt;# gluster v set testvol cluster.rsync-hash-regex none&lt;/pre&gt; &lt;p&gt;It should be noted that this setting will cause a lot of files to be placed in incorrect subvolumes, creating a lot of link files until a rebalance is executed.  The link files will add a small amount of overhead when these files are accessed; while a rebalance is not necessary immediately, it&amp;#8217;s a good idea to rebalance at some point after using rsync with this tunable.&lt;/p&gt; &lt;p&gt;2)  Rsync defaults to a pretty small request size, and this also is a weak point on GlusterFS.  GlusterFS tends to perform best with request sizes over 64KB; 1MB tends to provide the best performance. With request sizes that are less than 4KB, things really start to degrade.  Rsync does have a tunable to change this behavior. It&amp;#8217;s called &lt;code&gt;block-size&lt;/code&gt;.  Rsync&amp;#8217;s default for block size is 2KB, which really hurts performance when rsyncing to/from GlusterFS.  Also note that the maximum block size for rsync is 128KB:&lt;/p&gt; &lt;pre&gt;#define MAX_BLOCK_SIZE ((int32)1 &amp;#60;&amp;#60; 17)u&lt;/pre&gt; &lt;p&gt;When rsyncing to/from GlusterFS, I suggest using the block size of 128KB. Some older versions support up to 512MB. If you have an older version, I suggest using 1MB.  You can set block size using the following command, which forces the block size used in rsync’s delta-transfer algorithm to a fixed value. The value is normally selected based on the size of each file being updated. See the Rsync Technical Report for details.&lt;/p&gt; &lt;pre&gt;-B, --block-size=BLOCKSIZE&lt;/pre&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;pre&gt;# rsync -vrah /gluster-mount/ /home/bturner/Downloads/ --progress -B=131072&lt;/pre&gt; &lt;p&gt;You can also look at the following option (see the rsync man page):&lt;/p&gt; &lt;pre&gt;-W, --whole-file&lt;/pre&gt; &lt;p&gt;This option disables rsync’s delta-transfer algorithm, which causes all transferred files to be sent whole. The transfer may be faster if this option is used when the bandwidth between the source and destination machines is higher than the bandwidth to disk (especially when the &amp;#8220;disk&amp;#8221; is actually a networked filesystem). This is the default when both the source and destination are specified as local paths, but only if no batch-writing option is in effect.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;whole-file&lt;/code&gt; option can be used with or instead of the block size option. I suggest testing to see which works best for your data set.&lt;/p&gt; &lt;p&gt;3)  Next, we come to the &lt;code&gt;--inplace&lt;/code&gt; option.  This option actually changes how rsync behaves. This option behaves similarly to the rsync regex option discussed above except it is implemented on the rsync side instead of the GlusterFS side.  The following information is from the man page:&lt;/p&gt; &lt;p&gt;&lt;em&gt;&amp;#8211;inplace update destination files in-place&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;This option changes how rsync transfers a file when its data needs to be updated: instead of the default method of creating a new copy of the file and moving it into place when it is com&lt;/em&gt;&lt;em&gt;plete, rsync instead writes the updated data directly to the destination file.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;This has several effects:&lt;/em&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt; Hard links are not broken. This means the new data will be visible through other hard links to the destination file. Moreover, attempts to copy differing source files onto a multi&lt;/em&gt;&lt;em&gt;ply-linked destination file will result in a &amp;#8220;tug of war&amp;#8221; with the destination data changing back and forth.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;In-use binaries cannot be updated (either the OS will prevent this from happening, or binaries that attempt to swap-in their data will misbehave or crash).&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;The file’s data will be in an inconsistent state during the transfer and will be left that way if the transfer is interrupted or if an update fails.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;A file that rsync cannot write to cannot be updated. While a super user can update any file, a normal user needs to be granted write permission for the open of the file for writing to &lt;/em&gt;&lt;em&gt;be successful.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;The efficiency of rsync’s delta-transfer algorithm may be reduced if some data in the destination file is overwritten before it can be copied to a position later in the file. This &lt;/em&gt;&lt;em&gt;does not apply if you use &amp;#8211;backup, since rsync is smart enough to use the backup file as the basis file for the transfer.&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;em&gt;WARNING: you should not use this option to update files that are being accessed by others, so be careful when choosing to use this for a copy.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;This option is useful for transferring large files with block-based changes or appended data, and also on systems that are disk bound, not network bound. It can also help keep a &lt;/em&gt;&lt;em&gt;copy-on-write filesystem snapshot from diverging the entire contents of a file that only has minor changes.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;The option implies &amp;#8211;partial (since an interrupted transfer does not delete the file), but conflicts with &amp;#8211;partial-dir and &amp;#8211;delay-updates. Prior to rsync 2.6.4 &amp;#8211;inplace was also incompat&lt;/em&gt;&lt;em&gt;ible with &amp;#8211;compare-dest and &amp;#8211;link-dest.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;I recommend using the GlusterFS tunable when you have a changing data set or you don&amp;#8217;t want to mess with the default operation of rsync.  I usually use either the GlusterFS tunable or &lt;code&gt;--inplace&lt;/code&gt;. I haven&amp;#8217;t tried using both at the same time, but I expect that since we would no longer be using &amp;#8220;write new then rename,&amp;#8221; the GlusterFS tunable wouldn&amp;#8217;t have any effect.&lt;/p&gt; &lt;p&gt;4)  Other workarounds:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;tar&lt;/code&gt; up the directory and use &lt;code&gt;scp&lt;/code&gt;. In some cases, geo-replication TARs up data and sends it as one file, which can reduce the number of round trips that go over the wire as well as avoid the rename FOP.&lt;/li&gt; &lt;li&gt;This can be sped up with the &lt;a href="https://github.com/parallel-fs-utils/multi-thread-posix"&gt;parallel-untar&lt;/a&gt; utility from Ben England.&lt;/li&gt; &lt;li&gt;Rsync to a local directory and copy to GlusterFS.&lt;/li&gt; &lt;li&gt;Use geo-replication.&lt;/li&gt; &lt;li&gt;Use &lt;code&gt;cp&lt;/code&gt; with the proper flags to preserve whatever metadata/xattrs/etc. that you wish to preserve.&lt;/li&gt; &lt;li&gt;Use some other application that does not follow the &amp;#8220;write new then rename&amp;#8221; workflow.  Remember it&amp;#8217;s the renames that really kill performance here, so using an application that avoids them will improve performance.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Try these tips to see if they increase the performance of your rsync workloads. If you know of any tip I missed, please let me know in the comments!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;linkname=Improving%20rsync%20performance%20with%20GlusterFS" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F14%2Fimproving-rsync-performance-with-glusterfs%2F&amp;#38;title=Improving%20rsync%20performance%20with%20GlusterFS" data-a2a-url="https://developers.redhat.com/blog/2018/08/14/improving-rsync-performance-with-glusterfs/" data-a2a-title="Improving rsync performance with GlusterFS"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/14/improving-rsync-performance-with-glusterfs/"&gt;Improving rsync performance with GlusterFS&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lL-aLMBlZgg" height="1" width="1" alt=""/&gt;</content><summary>Rsync is a particularly tough workload for GlusterFS because with its defaults, it exercises some of the worst case operations for GlusterFS. GlusterFS is the core of Red Hat Gluster’s scale-out storage solution. Gluster is an open, software-defined storage (SDS) platform that is designed to scale out to handle data intensive tasks across many servers in physical, virtual, or cloud deployments. Si...</summary><dc:creator>Benny Turner</dc:creator><dc:date>2018-08-14T11:00:11Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/14/improving-rsync-performance-with-glusterfs/</feedburner:origLink></entry><entry><title>Hotrod clients C++ and C# 8.3.0.Beta1 are out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9tX9Hsb9Dwc/hotrod-clients-c-and-c-830beta1-are-out.html" /><category term="beta" scheme="searchisko:content:tags" /><category term="C#" scheme="searchisko:content:tags" /><category term="C++" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="minor release" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>rigazilla</name></author><id>searchisko:content:id:jbossorg_blog-hotrod_clients_c_and_c_8_3_0_beta1_are_out</id><updated>2018-08-14T07:18:08Z</updated><published>2018-08-14T07:11:00Z</published><content type="html">Dear Infinispanners,&lt;br /&gt;&lt;br /&gt;The C++ and C# 8.3.0.Beta1 releases are available!&lt;br /&gt;&lt;br /&gt;Main feature for this release is: transactions. Clients can now run sequence of hotrod operations in a transactional way. Basic methods are provided to begin, commit or rollback a transaction over an hotrod connection (hotrod 2.7 and Infinispan 9.3+ are required).&lt;br /&gt;API are quite easy to use: &lt;br /&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;script src="https://gist.github.com/rigazilla/b862e55148fef8b7fcc04ef8ac807af5.js"&gt;&lt;/script&gt; &lt;/td&gt;&lt;td&gt;&lt;script src="https://gist.github.com/rigazilla/11dce4ec0545d1b4900c8a10f0ef17c0.js"&gt;&lt;/script&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Source code, binaries and docs are at the usual place. Thank you for following us!&lt;br /&gt;The Infinispan Team &lt;br /&gt;[1]&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314125&amp;amp;version=12338869"&gt; Release notes&lt;/a&gt;&lt;br /&gt;[2++] &lt;a href="https://github.com/infinispan/cpp-client/tree/8.3.0.Beta1"&gt;C++ code for 8.3.0.Beta1&lt;/a&gt;&lt;br /&gt;[2#] &lt;a href="https://github.com/infinispan/dotnet-client/tree/8.3.0.Beta1"&gt;C# code for 8.3.0.Beta1&lt;/a&gt;&lt;br /&gt;[3] &lt;a href="http://infinispan.org/hotrod-clients/"&gt;Downloads&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/CMgsAVcqIYY" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9tX9Hsb9Dwc" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispanners, The C++ and C# 8.3.0.Beta1 releases are available! Main feature for this release is: transactions. Clients can now run sequence of hotrod operations in a transactional way. Basic methods are provided to begin, commit or rollback a transaction over an hotrod connection (hotrod 2.7 and Infinispan 9.3+ are required). API are quite easy to use: Source code, binaries and docs are a...</summary><dc:creator>rigazilla</dc:creator><dc:date>2018-08-14T07:11:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/CMgsAVcqIYY/hotrod-clients-c-and-c-830beta1-are-out.html</feedburner:origLink></entry><entry><title>Version 1.5 of Apiman is released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KUlVoNuQSRc/release-1.5.html" /><category term="feed_group_name_apiman" scheme="searchisko:content:tags" /><category term="feed_name_apiman" scheme="searchisko:content:tags" /><author><name>Marc Savy</name></author><id>searchisko:content:id:jbossorg_blog-version_1_5_of_apiman_is_released</id><updated>2018-08-14T03:00:00Z</updated><published>2018-08-14T03:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;I&amp;#8217;m happy to announce that Apiman 1.5.1.Final is out.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It contains an important new policy feature: the ability to modify policy failures before they are returned to users (even if they are thrown by another policy).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This means that policies such as CORS can add their headers, irrespective of whether the request was successful or not (e.g. due to rate limiting).&lt;/p&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="failure-processing"&gt;Failure Processing&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When a policy throws a failure (e.g. rate limit reached), previously this caused an immediate termination that bypassed all other policies. &lt;strong&gt;Failure processing&lt;/strong&gt; was requested in the community to allow policies to modify failures emitted by other policies, such that headers can be set.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To implement this, you simply need to override the default method &lt;code&gt;processFailure&lt;/code&gt; in &lt;code&gt;IPolicy&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="keyword"&gt;default&lt;/span&gt; &lt;span class="type"&gt;void&lt;/span&gt; processFailure(PolicyFailure failure, IPolicyContext context, &lt;span class="predefined-type"&gt;Object&lt;/span&gt; config, IPolicyFailureChain chain) { ... }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Or, if you&amp;#8217;re using &lt;code&gt;AbstractMappedPolicy&lt;/code&gt;, then you should override &lt;code&gt;doProcessFailure&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="directive"&gt;protected&lt;/span&gt; &lt;span class="type"&gt;void&lt;/span&gt; doProcessFailure(PolicyFailure failure, IPolicyContext context, C config, IPolicyFailureChain chain) { ... }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example, in the &lt;a href="https://github.com/msavy/apiman-plugins/blob/fd2aa46c62a60c7450a3777527f37723908e0865/cors-policy/src/main/java/io/apiman/plugins/cors_policy/CorsPolicy.java#L114-L125"&gt;CORS plugin&lt;/a&gt; it simply adds the headers:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="annotation"&gt;@Override&lt;/span&gt; &lt;span class="directive"&gt;protected&lt;/span&gt; &lt;span class="type"&gt;void&lt;/span&gt; doProcessFailure(PolicyFailure failure, IPolicyContext context, CorsConfigBean config, IPolicyFailureChain chain) { CaseInsensitiveStringMultiMap corsHeaders = getResponseHeaders(context); &lt;span class="keyword"&gt;if&lt;/span&gt;(corsHeaders != EMPTY_MAP) { failure.getHeaders().putAll(corsHeaders.toMap()); } chain.doFailure(failure); }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Meaning that even if a rate limit is hit, then the headers will still be added.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you experience any issues, please report them to us via &lt;a href="https://issues.jboss.org/browse/APIMAN/"&gt;JIRA&lt;/a&gt;, &lt;a href="https://github.com/apiman/apiman"&gt;GitHub&lt;/a&gt;, or &lt;a href="https://lists.jboss.org/mailman/listinfo/apiman-user"&gt;the mailing list&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="download-1-5-1-final"&gt;Download 1.5.1.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.5.1.Final/apiman-distro-vertx-1.5.1.Final.zip"&gt;Vert.x (Gateway Only)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.5.1.Final/apiman-distro-wildfly10-1.5.1.Final-overlay.zip"&gt;WildFly 10 or EAP 7.1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.5.1.Final/apiman-distro-wildfly11-1.5.1.Final-overlay.zip"&gt;WildFly 11&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.5.1.Final/apiman-distro-eap7-1.5.1.Final-overlay.zip"&gt;EAP 7&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.5.1.Final/apiman-distro-tomcat8-1.5.1.Final-overlay.zip"&gt;Tomcat 8+&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KUlVoNuQSRc" height="1" width="1" alt=""/&gt;</content><summary>I’m happy to announce that Apiman 1.5.1.Final is out. It contains an important new policy feature: the ability to modify policy failures before they are returned to users (even if they are thrown by another policy). This means that policies such as CORS can add their headers, irrespective of whether the request was successful or not (e.g. due to rate limiting). Failure Processing When a policy thr...</summary><dc:creator>Marc Savy</dc:creator><dc:date>2018-08-14T03:00:00Z</dc:date><feedburner:origLink>http://apiman.io/blog/apiman/release/2018/08/13/release-1.5.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.3.5.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6utzHJFqj80/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_3_5_final_released</id><updated>2018-08-21T12:41:51Z</updated><published>2018-08-14T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Today, we released a new maintenance release of Hibernate ORM 5.3.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It will be the version included in WildFly 14.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes"&gt;&lt;a class="anchor" href="#bug-fixes"&gt;&lt;/a&gt;Bug fixes&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release mostly contains bugfixes:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12875"&gt;HHH-12875&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HHH-12882"&gt;HHH-12882&lt;/a&gt; - Various fixes regarding &lt;code&gt;@Where&lt;/code&gt; support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12871"&gt;HHH-12871&lt;/a&gt; - Metamodel contains managed types related to dynamic-map entities that have been excluded&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12905"&gt;HHH-12905&lt;/a&gt; - Passing null as parameter is not allowed even when enablePassingNulls() has been called&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12906"&gt;HHH-12906&lt;/a&gt; - Statistics.getCollectionRoleNames() reports incorrect value&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12907"&gt;HHH-12907&lt;/a&gt; - Avoid garbage collection pressure when creating proxies with ByteBuddy&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="naive-limit-handler-for-sybase"&gt;&lt;a class="anchor" href="#naive-limit-handler-for-sybase"&gt;&lt;/a&gt;Naive limit handler for Sybase&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We implemented a naive limit handler for Sybase: it will only be triggered for traditional &lt;code&gt;SELECT&lt;/code&gt; and &lt;code&gt;SELECT DISTINCT&lt;/code&gt; queries and will add a &lt;code&gt;TOP&lt;/code&gt; clause to these queries.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While simple, it should be useful in a lot of common scenarios.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="dependency-upgrade"&gt;&lt;a class="anchor" href="#dependency-upgrade"&gt;&lt;/a&gt;Dependency upgrade&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should update your ByteBuddy dependency to 1.8.17 if you define it manually.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="full-changelog"&gt;&lt;a class="anchor" href="#full-changelog"&gt;&lt;/a&gt;Full changelog&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the full list of changes &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31695/tab/release-report-all-issues"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31695&amp;amp;styleName=Html&amp;amp;projectId=10031"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-5-3-5-final"&gt;&lt;a class="anchor" href="#getting-5-3-5-final"&gt;&lt;/a&gt;Getting 5.3.5.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/orm/releases/5.3/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/hibernate"&gt;&lt;strong&gt;hibernate&lt;/strong&gt; tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-orm"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6utzHJFqj80" height="1" width="1" alt=""/&gt;</content><summary>Today, we released a new maintenance release of Hibernate ORM 5.3. It will be the version included in WildFly 14. What’s new Bug fixes This release mostly contains bugfixes: HHH-12875 and HHH-12882 - Various fixes regarding @Where support HHH-12871 - Metamodel contains managed types related to dynamic-map entities that have been excluded HHH-12905 - Passing null as parameter is not allowed even wh...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-08-14T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/08/14/hibernate-orm-535-final-out/</feedburner:origLink></entry></feed>
